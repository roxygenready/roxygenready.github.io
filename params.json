{"name":"Roxygenready.GitHub.io","tagline":"Prepare your R function library to be compiled into an R package by Roxygen","body":"<!--# RoxygenReady\r\nPrepare your R function library to be compiled into an R package by Roxygen-->\r\n<!--      site under construction-->\r\n\r\n[**Roxygen2**](https://cran.r-project.org/web/packages/roxygen2/index.html) is an awesome tool to easily create a package from your function library. \r\n\r\n[**RoxygenReady**](https://github.com/vertesy/RoxygenReady) helps in creating the function annotations needed to compile a proper package by **Roxygen2**.\r\n\r\nThe function annotation scaffold created by **RoxygenReady** spares you a lot of time documenting your functions easily and precisely. Your users gonna be grateful! The annotation it creates, can be automatically compiled into a package with a few lines of code. Packages are the standard way of distribution R code, as they integrate with other services, code sharing becomes much easier. (See the installation section for an examples)\r\n\r\n## Workflow: streamlined package creation\r\n\r\n1. *You start out with your .R file containing your favorite functions.*\r\n\r\n \t\tprint11more <- function(n=1, m=1) { # a function with real added value\r\n\t\t\tprint (n+(11*m))\r\n\t\t}\r\n\r\n- *Create function annotation scaffold by* ***RoxygenReady*** *from all functions in your script.*\r\n\r\n\t\t#' print11more\r\n\t\t#'\r\n\t\t#' # a function with real added value\r\n\t\t#' @param n\r\n\t\t#' @param m\r\n\t\t#' @examples print11more(n=1, m=1)\r\n\t\t#' @export\r\n\r\n\r\n\t\tprint11more <- function(n=1, m=1) {\r\n\t\t\tprint (n+(11*m))\r\n\t\t}\r\n\r\n\r\n- After compiling and installing you package,\r\n\t- your functions have a working help:\r\n\r\n![](https://raw.githubusercontent.com/vertesy/RoxygenReady/master/Images/03.b.Final.png)\r\n\r\n\r\n- You can share your package on **GitHub**, and everyone can super easily install it.\r\n\t\r\n\r\n\r\n## Installation\r\n\r\nInstall directly from **GitHub** via **devtools** with one R command:\r\n\r\n<!--    devtools::install_github(repo = \"vertesy/RoxygenReady/\", subdir = \"RoxygenReady\")-->\r\n    devtools::install_github(repo = \"vertesy/RoxygenReady/RoxygenReady\")\r\n    \r\n...then simply load the package:\r\n\r\n    require(\"RoxygenReady\")\r\n\r\n\r\n## Package content\r\n\r\nA couple of functions to generate inline description from your functions, using their names and arguments as default input. These can be later parsed by Roxygen to an R package's help section.\r\n\r\n\r\n## How to create an R package\r\n> check: Workflow_to_Create_an_R_Package.R for details\r\n\r\n1. Write or collect your favorite functions into an R script \r\n-  Create a new package by **roxygen2**'s `create()` function, copy your function script.\r\n- **Prepare** in-line documentation **with RoxygenReady**\r\n- Manual editing of in-line description\r\n- **Compile** a package & documentation **by roxygen2**\r\n- **Install** your package locally\r\n- Test your package\r\n- Upload to **GitHub**\r\n- Share it with others\r\n\r\n<br>\r\n\r\n      Check: Workflow_to_Create_an_R_Package.R for details\r\n\r\n*Also check out a great introduction about writing your first package in R by [Hillary Parker](http://hilaryparker.com/2014/04/29/writing-an-r-package-from-scratch/)*\r\n\r\n\r\n <br/> <br/> <br/> <br/> <br/>\r\n[*edit the website*](https://github.com/vertesy/RoxygenReady/generated_pages/new)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}